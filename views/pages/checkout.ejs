<%- include('../partials/header') %>

<div class="checkout-container">
    <div class="container py-5">
        <div class="row">
            <div class="col-md-7 mb-4">
                <div class="checkout-card">
                    <h2 class="mb-4">Shipping Details</h2>
                    <form id="checkoutForm">
                        <div class="row g-3">
                            <div class="col-12">
                                <div class="form-group mb-3">
                                    <label class="d-flex justify-content-between align-items-center mb-2">
                                        <span>Registered Phone Number</span>
                                        <button type="button" class="btn btn-link p-0" onclick="togglePhoneEdit()">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                    </label>
                                    <div class="phone-display">
                                        <div class="registered-phone">
                                            <span id="registeredPhone" class="form-control-plaintext"></span>
                                        </div>
                                    </div>
                                    <div class="phone-edit d-none">
                                        <div class="input-group">
                                            <input type="tel" class="form-control" id="newPhone" pattern="[0-9]{10}">
                                            <button class="btn btn-success" type="button" onclick="updatePhone()">
                                                <i class="fas fa-check"></i> Save
                                            </button>
                                            <button class="btn btn-secondary" type="button" onclick="cancelPhoneEdit()">
                                                <i class="fas fa-times"></i> Cancel
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-floating">
                                    <textarea class="form-control" id="checkoutAddress" placeholder="Address" required style="height: 100px"></textarea>
                                    <label class="address-label">
                                        <i class="fas fa-home"></i>
                                        <span>Delivery Address</span>
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="checkoutCity" placeholder="City" value="Pune" readonly required>
                                    <label><i class="fas fa-city"></i> City</label>
                                </div>
                                <small class="text-info">Currently delivering only in Pune</small>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="checkoutPincode" placeholder="Pincode" required>
                                    <label><i class="fas fa-map-pin"></i> Pincode</label>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-floating">
                                    <input type="number" class="form-control" id="quantity" min="1" max="2" value="1" required>
                                    <label><i class="fas fa-shopping-basket"></i> Quantity (Max 2)</label>
                                </div>
                                <small class="text-muted">Maximum 2 hampers per order</small>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-md-5">
                <div class="checkout-card">
                    <h2 class="mb-4">Order Summary</h2>
                    <div class="product-summary mb-4">
                        <img src="" id="productImage" alt="Product" class="product-thumb">
                        <div>
                            <h5>Luxury Valentine's Hamper</h5>
                            <p class="text-muted mb-0">Premium Gift Collection</p>
                        </div>
                    </div>
                    <!-- Add delivery info here -->
                    <div class="delivery-info mb-3">
                        <h6 class="text-muted mb-2"><i class="fas fa-truck"></i> Estimated Delivery</h6>
                        <div class="delivery-date">
                            <span id="deliveryDate" class="fw-bold"></span>
                        </div>
                        <small class="text-success">2 Days Standard Delivery</small>
                    </div>
                    <div class="price-details">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Price (₹2199× <span id="quantityDisplay">1</span>)</span>
                            <span id="subtotal">₹2199</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping</span>
                            <span class="text-success">Free</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Total</span>
                            <span id="totalPrice">₹2199</span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-checkout w-100 mt-4" id="placeOrderBtn" onclick="processOrder()" disabled>
                        <span class="button-content">
                            <i class="fas fa-shopping-cart"></i> Place Order (Cash on Delivery)
                        </span>
                        <span class="button-loader d-none">
                            <i class="fas fa-circle-notch fa-spin"></i> Processing...
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.checkout-container {
    min-height: 100vh;
    background: linear-gradient(135deg, #ff758c 0%, #ff7eb3 100%);
    padding-top: 100px;
}

.checkout-card {
    background: white;
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    margin-bottom: 1rem;
}

.form-floating {
    margin-bottom: 1rem;
}

.form-floating > .form-control {
    font-size: 0.95rem;
}

.form-floating > .form-control::placeholder {
    font-size: 0.9rem;
}

.form-floating > label {
    padding-left: 2.5rem;
    font-size: 0.9rem;
}

.form-floating > label i {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #ff4b6e;
}

.product-summary {
    display: flex;
    gap: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eee;
}

.product-thumb {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 10px;
}

.price-details {
    padding: 1rem 0;
}

.btn-checkout {
    background: linear-gradient(45deg, #ff4b6e, #ff758c);
    color: white;
    border: none;
    padding: 1rem;
    border-radius: 10px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-checkout:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 75, 110, 0.3);
}

.phone-edit .input-group .btn {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
}

.phone-edit .input-group .btn-success {
    background: linear-gradient(45deg, #2ecc71, #27ae60);
    border: none;
}

.phone-edit .input-group .btn-secondary {
    background: #95a5a6;
    border: none;
}

#checkoutPhone {
    background-color: #f8f9fa;
    font-weight: 500;
    color: #2c3e50;
}

.btn-link {
    color: #ff4b6e;
    text-decoration: none;
    font-size: 0.9rem;
    padding: 0;
}

.btn-link:hover {
    color: #ff758c;
    text-decoration: underline;
}

.registered-phone {
    background: #f8f9fa;
    padding: 0.75rem 1rem;
    border-radius: 10px;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.form-control-plaintext {
    font-weight: 500;
    color: #2c3e50;
    font-size: 1rem;
}

.registered-phone i {
    color: #ff4b6e;
    margin-right: 8px;
}

.address-label {
    display: flex !important;
    align-items: center !important;
    gap: 8px;
    top: 0 !important;
    padding-top: 0.625rem !important;
}

.address-label i {
    position: static !important;
    transform: none !important;
}

.form-floating > textarea.form-control ~ .address-label {
    padding: 0.625rem 1rem !important;
    height: auto;
}

.form-floating > textarea.form-control:focus ~ .address-label,
.form-floating > textarea.form-control:not(:placeholder-shown) ~ .address-label {
    transform: scale(0.85) translateY(-0.20rem) !important;
    opacity: 0.65;
    background-color: white;
    padding: 0 0.5rem !important;
    height: auto;
}

.delivery-info {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 10px;
    margin-bottom: 1rem;
}

.delivery-date {
    color: #2c3e50;
    margin-bottom: 0.5rem;
}

.delivery-info i {
    color: #ff4b6e;
    margin-right: 8px;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    opacity: 1;
}

@media (max-width: 768px) {
    .checkout-container {
        padding-top: 60px;
        padding: 60px 15px;
    }
    
    .checkout-card {
        padding: 1.25rem;
    }

    h2 {
        font-size: 1.5rem;
    }

    .form-floating > label {
        font-size: 0.85rem;
    }

    .form-floating > .form-control {
        font-size: 0.9rem;
        padding: 0.5rem 0.75rem;
    }

    .product-summary {
        gap: 0.75rem;
    }

    .product-thumb {
        width: 60px;
        height: 60px;
    }

    .price-details {
        font-size: 0.9rem;
    }

    .btn-checkout {
        padding: 0.75rem;
        font-size: 0.9rem;
    }

    .registered-phone {
        padding: 0.5rem 0.75rem;
        font-size: 0.9rem;
    }
}

@media (max-width: 480px) {
    .checkout-container {
        padding-top: 40px;
    }

    .checkout-card {
        padding: 1rem;
    }

    h2 {
        font-size: 1.25rem;
        margin-bottom: 1rem !important;
    }

    .form-floating > label {
        font-size: 0.8rem;
    }

    .btn-checkout {
        padding: 0.6rem;
        font-size: 0.85rem;
    }

    .phone-edit .input-group .btn {
        padding: 0.4rem 0.75rem;
        font-size: 0.8rem;
    }
}

.btn-checkout:disabled {
    background: #ccc;
    transform: none;
    cursor: not-allowed;
}

.btn-checkout:disabled:hover {
    box-shadow: none;
    transform: none;
}

.is-invalid {
    border-color: #dc3545;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
</style>

<!-- Add this in the head section -->
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js"></script>
<script src="/js/confetti.js"></script>

<script>
// Move these functions outside DOMContentLoaded and before any other functions that use them
function validateForm() {
    const phone = document.getElementById('registeredPhone').textContent;
    if (!phone || phone.includes('No phone number registered')) {
        return false;
    }

    // Check quantity first
    const quantity = parseInt(document.getElementById('quantity').value) || 0;
    if (quantity < 1) {
        return false;
    }

    // Check other required fields
    const requiredFields = ['checkoutAddress', 'checkoutPincode', 'quantity'];
    for (const fieldId of requiredFields) {
        const field = document.getElementById(fieldId);
        if (!field.value.trim()) {
            return false;
        }
    }

    return true;
}

function updateOrderButton() {
    const orderBtn = document.getElementById('placeOrderBtn');
    if (validateForm()) {
        orderBtn.removeAttribute('disabled');
    } else {
        orderBtn.setAttribute('disabled', 'disabled');
    }
}

document.addEventListener('DOMContentLoaded', async function() {
    // Add this at the beginning of the DOMContentLoaded function
    // Calculate and display delivery date
    const deliveryDate = new Date();
    deliveryDate.setDate(deliveryDate.getDate() + 2);
    const options = { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'short', 
        day: 'numeric' 
    };
    const formattedDate = deliveryDate.toLocaleDateString('en-US', options);
    document.getElementById('deliveryDate').textContent = formattedDate;

    // Set product image from localStorage
    const productImage = localStorage.getItem('productImage');
    if (productImage) {
        document.getElementById('productImage').src = productImage;
    }

    // Fetch user details
    try {
        const token = localStorage.getItem('token');
        if (!token) {
            showToast('Please login to continue', 'error');
            window.location.href = '/login';
            return;
        }

        const response = await fetch('/user/profile', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            if (response.status === 401) {
                localStorage.removeItem('token');
                showToast('Session expired. Please login again', 'error');
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
                return;
            }
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const userData = await response.json();
        console.log('User data received:', userData); // Add this for debugging

        if (userData && userData.mobile) {
            document.getElementById('registeredPhone').innerHTML = `
                <i class="fas fa-phone-alt"></i> ${userData.mobile}
            `;
            document.getElementById('newPhone').value = userData.mobile;
        } else {
            document.getElementById('registeredPhone').innerHTML = `
                <i class="fas fa-exclamation-circle"></i> No phone number registered
            `;
        }
        
        if (userData.address) {
            document.getElementById('checkoutAddress').value = userData.address;
            document.getElementById('checkoutCity').value = userData.city || '';
            document.getElementById('checkoutPincode').value = userData.pincode || '';
        }
    } catch (error) {
        console.error('Error fetching user data:', error);
        showToast('Failed to load user data. Please try again.', 'error');
    }

    // Update prices when quantity changes
    document.getElementById('quantity').addEventListener('input', updatePrices);

    // Add this to your existing DOMContentLoaded event listener
    document.getElementById('quantity').addEventListener('blur', function() {
        const quantity = parseInt(this.value) || 0;
        if (quantity < 1) {
            showToast('Please select at least 1 hamper', 'warning');
        } else if (quantity > 2) {
            showToast('Maximum 2 hampers allowed per order', 'warning');
        }
    });

    // Set initial city value
    document.getElementById('checkoutCity').value = 'Pune';
    
    // Add validation listeners
    const requiredFields = ['checkoutAddress', 'checkoutPincode', 'quantity'];
    
    // Add input listeners to all required fields
    requiredFields.forEach(fieldId => {
        document.getElementById(fieldId).addEventListener('input', updateOrderButton);
    });

    // Add pincode validation
    document.getElementById('checkoutPincode').addEventListener('input', function(e) {
        updateOrderButton();
    });

    // Initial validation
    updateOrderButton();
});

function togglePhoneEdit() {
    document.querySelector('.phone-display').classList.add('d-none');
    document.querySelector('.phone-edit').classList.remove('d-none');
}

function cancelPhoneEdit() {
    document.querySelector('.phone-display').classList.remove('d-none');
    document.querySelector('.phone-edit').classList.add('d-none');
}

async function updatePhone() {
    const token = localStorage.getItem('token');
    const newPhone = document.getElementById('newPhone').value;

    if (!newPhone.match(/^[0-9]{10}$/)) {
        showToast('Please enter a valid 10-digit phone number', 'error');
        return;
    }

    try {
        const response = await fetch('/user/edit-user', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                mobile: newPhone
            })
        });

        if (handleUnauthorized(response)) return;


        if (response.ok) {
            document.getElementById('registeredPhone').innerHTML = `
                <i class="fas fa-phone-alt"></i> ${newPhone}
            `;
            showToast('✨ Phone number updated successfully', 'success');
            cancelPhoneEdit();
        } else {
            throw new Error('Failed to update phone number');
        }
    } catch (error) {
        showToast('Failed to update phone number', 'error');
        console.error(error);
    }
}

// Update your updatePrices function to not show toasts on input
function updatePrices() {
    let quantity = parseInt(document.getElementById('quantity').value) || 0;
    
    if (quantity < 1) {
        document.getElementById('placeOrderBtn').setAttribute('disabled', 'disabled');
    } else if (quantity > 2) {
        quantity = 2;
        document.getElementById('quantity').value = 2;
    }
    
    const pricePerUnit = 2199;
    const subtotal = (quantity * pricePerUnit).toFixed(2);
    
    document.getElementById('quantityDisplay').textContent = quantity;
    document.getElementById('subtotal').textContent = `$${subtotal}`;
    document.getElementById('totalPrice').textContent = `$${subtotal}`;
    
    // Update button state after quantity change
    updateOrderButton();
}

async function processOrder() {
    if (!validateForm()) {
        showToast('Please fill all required fields correctly', 'error');
        return;
    }

    const token = localStorage.getItem('token');
    if (!token) {
        showToast('Please login to continue', 'error');
        setTimeout(() => {
            window.location.href = '/login';
        }, 2000);
        return;
    }

    const submitBtn = document.querySelector('.btn-checkout');
    const btnContent = submitBtn.querySelector('.button-content');
    const btnLoader = submitBtn.querySelector('.button-loader');

    try {
        submitBtn.disabled = true;
        btnContent.classList.add('d-none');
        btnLoader.classList.remove('d-none');

        const quantity = parseInt(document.getElementById('quantity').value) || 1;
        const unitPrice = 2199;
        
        const formData = {
            shippingInfo: {
                address: document.getElementById('checkoutAddress').value,
                city: document.getElementById('checkoutCity').value,
                pincode: document.getElementById('checkoutPincode').value
            },
            orderItems: [{
                productId: "valentine-hamper",
                name: "Luxury Valentine's Hamper",
                images: document.getElementById('productImage').src,
                quantity: quantity,
                price: unitPrice
            }],
            totalPrice: quantity * unitPrice,
            paymentMethod: 'cod'
        };

        const response = await fetch('/user/cart/create-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();
        
        if (response.ok) {
            showToast('🎉 Order placed successfully!', 'success');
            startConfetti(); // Start confetti animation
            
            // Fix the redirect URL
            setTimeout(() => {
                window.location.href = '/orders'; // Changed from /user/orders to /orders
            }, 2500);
        } else {
            throw new Error(data.message || 'Failed to create order');
        }
    } catch (error) {
        console.error(error);
        showToast(error.message || 'Failed to create order', 'error');
    } finally {
        submitBtn.disabled = false;
        btnContent.classList.remove('d-none');
        btnLoader.classList.add('d-none');
    }
}

// Add this new function to handle unauthorized responses
function handleUnauthorized(response) {
    if (response.status === 401) {
        localStorage.removeItem('token');
        showToast('Session expired. Please login again', 'error');
        setTimeout(() => {
            window.location.href = '/login';
        }, 2000);
        return true;
    }
    return false;
}
</script>

<%- include('../partials/footer') %>
